version: "3"
services:
  db:
    image: postgres:14.2-alpine
    restart: always
    environment:
      - CELERY_BROKER=$REDIS_URL
      - CELERY_BACKEND=$REDIS_URL
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
  redis:
    image: redis:6.2.4-alpine
    restart: always
  web:
    build:
      context: '../'
    restart: always
    expose:
      - "80"
    ports:
      - "80:8000"
    links:
      - "redis:redis"
    command: 'sh -c "/app/docker/entrypoint.sh && exec python3 manage.py runserver 0.0.0.0:8000"'
    volumes:
      - ../:/app
    environment:
      - CELERY_BROKER=$REDIS_URL
      - CELERY_BACKEND=$REDIS_URL
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db
    
  celery-worker:
    build:
      context: ../
    restart: always
    volumes:
      - ../:/app
    command: celery -A conf worker -l info
    environment:
      - CELERY_BROKER=$REDIS_URL
      - CELERY_BACKEND=$REDIS_URL
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db
      - web
      - redis
  celery-beat:
    build:
      context: ../
    restart: always
    volumes:
      - ../:/app
    command: celery -A conf beat -l info
    environment:
      - CELERY_BROKER=$REDIS_URL
      - CELERY_BACKEND=$REDIS_URL
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    depends_on:
      - db
      - web
      - redis
      - celery-worker
volumes:
  postgres_data:


